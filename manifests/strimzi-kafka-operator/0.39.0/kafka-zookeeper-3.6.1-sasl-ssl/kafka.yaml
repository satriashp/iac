apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka
  namespace: kafka-operator
spec:
  kafka:
    version: 3.6.1
    replicas: 3
    listeners:
      - name: tls
        port: 9092
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.6"
      auto.create.topics.enable: true
      delete.topic.enable: true
      log.retention.ms: 86400000
      num.partitions: 5
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: ${KAFKA_STORAGE_SIZE:=10Gi}
        deleteClaim: false
    authorization:
      type: simple
      superUsers:
        - accelbyte
    resources:
      requests:
        memory: ${KAFKA_MEMORY_REQUESTS:=2Gi}
      limits:
        memory: ${KAFKA_MEMORY_LIMITS:=2Gi}
    template:
      podDisruptionBudget:
        maxUnavailable: 0
      pod:
        terminationGracePeriodSeconds: 120
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values: ${KAFKA_AVAILABILITY_ZONES}
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - kafka-kafka
                topologyKey: "kubernetes.io/hostname"
      clusterCaCert:
        metadata:
          annotations:
            replicator.v1.mittwald.de/replicate-to: ${SECRET_REPLICATE_TO_NAMESPACES:="justice"}
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: ${ZOOKEEPER_STORAGE_SIZE:=10Gi}
      deleteClaim: false
    resources:
      requests:
        memory: ${ZOOKEEPER_MEMORY_REQUESTS:=2Gi}
      limits:
        memory: ${ZOOKEEPER_MEMORY_LIMITS:=2Gi}
    template:
      podDisruptionBudget:
        maxUnavailable: 0
      pod:
        terminationGracePeriodSeconds: 120
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values: ${AVAILABILITY_ZONES}
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - kafka-zookeeper
                topologyKey: "kubernetes.io/hostname"
  entityOperator:
    userOperator: {}
  clusterCa:
    renewalDays: 30
    validityDays: 3652 # 10 years
    generateCertificateAuthority: true
  clientsCa:
    renewalDays: 30
    validityDays: 3652 # 10years
    generateCertificateAuthority: true

